;; Enable column display in status bar
;; -----------------------------------
(column-number-mode t)

;; highlight .h file as c++ (doesn't do any harm to pure C files)
;; --------------------------------------------------------------
(require 'cc-mode)
(add-to-list 'auto-mode-alist '("\\.h\\'" . c++-mode))

;; style I want to use in c++ mode
;; -------------------------------
(c-add-style "my-style" 
	     '("stroustrup"
	       (indent-tabs-mode . nil) ; use spaces rather than tabs
	       (c-basic-offset . 4)     ; indent by four spaces
                                        ; custom indentation rules
	       (c-offsets-alist . ((inline-open . 0)  
				   (brace-list-open . 0)
				   (statement-case-open . +)))
	       (c-hanging-braces-alist . (
					  (class-close)
					  ))
	       (c-cleanup-list . (
				  empty-defun-braces
				  defun-close-semi
				  list-close-comma
				  scope-operator
				  space-before-funcall
				  compact-empty-funccall
				  ))
	       ))

;; use my-style defined above
(defun my-c++-mode-hook ()
  (c-set-style "my-style")
  (auto-fill-mode)         
  (c-toggle-auto-hungry-state t)
  (add-to-list 'c-cleanup-list 'defun-close-semi)
  )
(add-hook 'c++-mode-hook 'my-c++-mode-hook)

;; Typing while selecting overwrite the selection
;; ----------------------------------------------
(delete-selection-mode t)


;; CEDET activation
;; ----------------
(setq cedet-root-path (file-name-as-directory "~/.local/share/cedet-git"))
(load-file (concat cedet-root-path "cedet-devel-load.el"))
(add-to-list 'load-path (concat cedet-root-path "contrib"))

;; select which submodes we want to activate
(add-to-list 'semantic-default-submodes 'global-semantic-mru-bookmark-mode)
(add-to-list 'semantic-default-submodes 'global-semanticdb-minor-mode)
(add-to-list 'semantic-default-submodes 'global-semantic-highlight-func-mode)
(add-to-list 'semantic-default-submodes 'global-semantic-idle-scheduler-mode)
(add-to-list 'semantic-default-submodes 'global-semantic-stickyfunc-mode)
(add-to-list 'semantic-default-submodes 'global-cedet-m3-minor-mode)

;; Activate semantic
;;(semantic-mode 1)

;; Activate eassist
(require 'eassist)

;; customisation of modes
(defun custom-cedet-hook ()
  (local-set-key [(control return)] 'semantic-ia-complete-symbol-menu)
  (local-set-key "\C-c?" 'semantic-ia-complete-symbol)

  (local-set-key "\C-c>" 'semantic-complete-analyze-inline)
  (local-set-key "\C-c=" 'semantic-decoration-include-visit)

  (local-set-key "\C-cj" 'semantic-ia-fast-jump)
  (local-set-key "\C-cq" 'semantic-ia-show-doc)
  (local-set-key "\C-cs" 'semantic-ia-show-summary)
  (local-set-key "\C-cp" 'semantic-analyze-proto-impl-toggle)
  )
(add-hook 'c-mode-common-hook   'custom-cedet-hook)
(add-hook 'lisp-mode-hook       'custom-cedet-hook)
(add-hook 'scheme-mode-hook     'custom-cedet-hook)
(add-hook 'emacs-lisp-mode-hook 'custom-cedet-hook)
(add-hook 'erlang-mode-hook     'custom-cedet-hook)

(defun custom-c-mode-cedet-hook ()
  (local-set-key "\C-ct" 'eassist-switch-h-cpp)
  (local-set-key "\C-xt" 'eassist-switch-h-cpp)
  (local-set-key "\C-ce" 'eassist-list-methods)
  (local-set-key "\C-c\C-r" 'semantic-symref)
  )
(add-hook 'c-mode-common-hook 'custom-c-mode-cedet-hook)

(semanticdb-enable-gnu-global-databases 'c-mode   t)
(semanticdb-enable-gnu-global-databases 'c++-mode t)

(when (cedet-ectag-version-check t)
  (semantic-load-enable-primary-ectags-support))

;; SRecode
(global-srecode-minor-mode t)

;; Enable EDE (Project Management) features
;;(global-ede-mode t)
(ede-enable-generic-projects)

;; Enable ECB
(add-to-list 'load-path "~/.local/share/ecb-git")
(require 'ecb)

